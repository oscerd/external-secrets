apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.15.0
  name: awses.providers.external-secrets.io
spec:
  group: providers.external-secrets.io
  names:
    categories:
    - aws
    kind: AWS
    listKind: AWSList
    plural: awses
    shortNames:
    - aws
    singular: aws
  scope: Cluster
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: AWSProvider configures a store to sync secrets with AWS.
            properties:
              additionalRoles:
                description: AdditionalRoles is a chained list of Role ARNs which
                  the provider will sequentially assume before assuming the Role
                items:
                  type: string
                type: array
              auth:
                description: |-
                  Auth defines the information necessary to authenticate against AWS
                  if not set aws sdk will infer credentials from your environment
                  see: https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials
                properties:
                  jwt:
                    description: Authenticate against AWS using service account tokens.
                    properties:
                      serviceAccountRef:
                        description: A reference to a ServiceAccount resource.
                        properties:
                          audiences:
                            description: |-
                              Audience specifies the `aud` claim for the service account token
                              If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity
                              then this audiences will be appended to the list
                            items:
                              type: string
                            type: array
                          name:
                            description: The name of the ServiceAccount resource being
                              referred to.
                            type: string
                          namespace:
                            description: |-
                              Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
                              to the namespace of the referent.
                            type: string
                        required:
                        - name
                        type: object
                    type: object
                  secretRef:
                    description: |-
                      AWSAuthSecretRef holds secret references for AWS credentials
                      both AccessKeyID and SecretAccessKey must be defined in order to properly authenticate.
                    properties:
                      accessKeyIDSecretRef:
                        description: The AccessKeyID is used for authentication
                        properties:
                          key:
                            description: |-
                              The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
                              defaulted, in others it may be required.
                            type: string
                          name:
                            description: The name of the Secret resource being referred
                              to.
                            type: string
                          namespace:
                            description: |-
                              Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
                              to the namespace of the referent.
                            type: string
                        type: object
                      secretAccessKeySecretRef:
                        description: The SecretAccessKey is used for authentication
                        properties:
                          key:
                            description: |-
                              The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
                              defaulted, in others it may be required.
                            type: string
                          name:
                            description: The name of the Secret resource being referred
                              to.
                            type: string
                          namespace:
                            description: |-
                              Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
                              to the namespace of the referent.
                            type: string
                        type: object
                      sessionTokenSecretRef:
                        description: |-
                          The SessionToken used for authentication
                          This must be defined if AccessKeyID and SecretAccessKey are temporary credentials
                          see: https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_use-resources.html
                        properties:
                          key:
                            description: |-
                              The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
                              defaulted, in others it may be required.
                            type: string
                          name:
                            description: The name of the Secret resource being referred
                              to.
                            type: string
                          namespace:
                            description: |-
                              Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
                              to the namespace of the referent.
                            type: string
                        type: object
                    type: object
                type: object
              controller:
                description: |-
                  Used to select the correct ESO controller (think: ingress.ingressClassName)
                  The ESO controller is instantiated with a specific controller name and filters ES based on this property
                type: string
              externalID:
                description: AWS External ID set on assumed IAM roles
                type: string
              prefix:
                description: Prefix adds a prefix to all retrieved values.
                type: string
              refreshInterval:
                description: Used to configure store refresh interval in seconds.
                  Empty or 0 will default to the controller config.
                type: integer
              region:
                description: AWS Region to be used for the provider
                type: string
              retrySettings:
                description: Used to configure http retries if failed
                properties:
                  maxRetries:
                    format: int32
                    type: integer
                  retryInterval:
                    type: string
                type: object
              role:
                description: Role is a Role ARN which the provider will assume
                type: string
              secretsManager:
                description: SecretsManager defines how the provider behaves when
                  interacting with AWS SecretsManager
                properties:
                  forceDeleteWithoutRecovery:
                    description: |-
                      Specifies whether to delete the secret without any recovery window. You
                      can't use both this parameter and RecoveryWindowInDays in the same call.
                      If you don't use either, then by default Secrets Manager uses a 30 day
                      recovery window.
                      see: https://docs.aws.amazon.com/secretsmanager/latest/apireference/API_DeleteSecret.html#SecretsManager-DeleteSecret-request-ForceDeleteWithoutRecovery
                    type: boolean
                  recoveryWindowInDays:
                    description: |-
                      The number of days from 7 to 30 that Secrets Manager waits before
                      permanently deleting the secret. You can't use both this parameter and
                      ForceDeleteWithoutRecovery in the same call. If you don't use either,
                      then by default Secrets Manager uses a 30 day recovery window.
                      see: https://docs.aws.amazon.com/secretsmanager/latest/apireference/API_DeleteSecret.html#SecretsManager-DeleteSecret-request-RecoveryWindowInDays
                    format: int64
                    type: integer
                type: object
              service:
                description: Service defines which service should be used to fetch
                  the secrets
                enum:
                - SecretsManager
                - ParameterStore
                type: string
              sessionTags:
                description: AWS STS assume role session tags
                items:
                  properties:
                    key:
                      type: string
                    value:
                      type: string
                  required:
                  - key
                  - value
                  type: object
                type: array
              transitiveTagKeys:
                description: AWS STS assume role transitive session tags. Required
                  when multiple rules are used with the provider
                items:
                  type: string
                type: array
            required:
            - region
            - service
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
